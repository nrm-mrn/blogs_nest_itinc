{"version":3,"sources":["../../src/setup/config-validation.utility.ts"],"sourcesContent":["import { validateSync } from 'class-validator';\n\nexport const configValidationUtility = {\n  validateConfig: (config: any) => {\n    const errors = validateSync(config);\n    if (errors.length > 0) {\n      const sortedMessages = errors\n        .map((error) => Object.values(error.constraints || {}).join(', '))\n        .join('; ');\n      throw new Error('Validation failed: ' + sortedMessages);\n    }\n  },\n  convertToBoolean(value: string) {\n    const trimmedValue = value?.trim();\n    if (trimmedValue === 'true') return true;\n    if (trimmedValue === '1') return true;\n    if (trimmedValue === 'enabled') return true;\n    if (trimmedValue === 'false') return false;\n    if (trimmedValue === '0') return false;\n    if (trimmedValue === 'disabled') return false;\n\n    return null;\n  },\n  getEnumValues<T extends Record<string, string>>(enumObj: T): string[] {\n    return Object.values(enumObj);\n  },\n};\n"],"names":["configValidationUtility","validateConfig","config","errors","validateSync","length","sortedMessages","map","error","Object","values","constraints","join","Error","convertToBoolean","value","trimmedValue","trim","getEnumValues","enumObj"],"mappings":";;;;+BAEaA;;;eAAAA;;;gCAFgB;AAEtB,MAAMA,0BAA0B;IACrCC,gBAAgB,CAACC;QACf,MAAMC,SAASC,IAAAA,4BAAY,EAACF;QAC5B,IAAIC,OAAOE,MAAM,GAAG,GAAG;YACrB,MAAMC,iBAAiBH,OACpBI,GAAG,CAAC,CAACC,QAAUC,OAAOC,MAAM,CAACF,MAAMG,WAAW,IAAI,CAAC,GAAGC,IAAI,CAAC,OAC3DA,IAAI,CAAC;YACR,MAAM,IAAIC,MAAM,wBAAwBP;QAC1C;IACF;IACAQ,kBAAiBC,KAAa;QAC5B,MAAMC,eAAeD,OAAOE;QAC5B,IAAID,iBAAiB,QAAQ,OAAO;QACpC,IAAIA,iBAAiB,KAAK,OAAO;QACjC,IAAIA,iBAAiB,WAAW,OAAO;QACvC,IAAIA,iBAAiB,SAAS,OAAO;QACrC,IAAIA,iBAAiB,KAAK,OAAO;QACjC,IAAIA,iBAAiB,YAAY,OAAO;QAExC,OAAO;IACT;IACAE,eAAgDC,OAAU;QACxD,OAAOV,OAAOC,MAAM,CAACS;IACvB;AACF"}