{"version":3,"sources":["../../../../src/core/exceptions/filters/throttler-exceptions.filter.ts"],"sourcesContent":["import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { ThrottlerException } from '@nestjs/throttler';\nimport { CoreConfig } from 'src/core/core.config';\n\n@Catch(ThrottlerException)\nexport class ThrottlerExceptionFilter implements ExceptionFilter {\n  constructor(private readonly configService: CoreConfig) {}\n  catch(exception: ThrottlerException, host: ArgumentsHost): void {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse<Response>();\n    const req = ctx.getRequest<Request>();\n\n    const message = 'Too many requests';\n    const code = HttpStatus.TOO_MANY_REQUESTS;\n    const resBody = this.buildResponseBody(req.url, message);\n    res.status(code).json(resBody);\n  }\n\n  private buildResponseBody(reqUrl: string, message: string) {\n    if (this.configService.verboseErrors) {\n      return {\n        timestamp: new Date().toISOString(),\n        path: reqUrl,\n        message,\n      };\n    } else {\n      return {\n        timestamp: new Date().toISOString(),\n        path: null,\n        message: 'Too many requests',\n      };\n    }\n  }\n}\n"],"names":["ThrottlerExceptionFilter","catch","exception","host","ctx","switchToHttp","res","getResponse","req","getRequest","message","code","HttpStatus","TOO_MANY_REQUESTS","resBody","buildResponseBody","url","status","json","reqUrl","configService","verboseErrors","timestamp","Date","toISOString","path","constructor"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBANN;2BAE4B;4BACR;;;;;;;;;;AAGpB,IAAA,AAAMA,2BAAN,MAAMA;IAEXC,MAAMC,SAA6B,EAAEC,IAAmB,EAAQ;QAC9D,MAAMC,MAAMD,KAAKE,YAAY;QAC7B,MAAMC,MAAMF,IAAIG,WAAW;QAC3B,MAAMC,MAAMJ,IAAIK,UAAU;QAE1B,MAAMC,UAAU;QAChB,MAAMC,OAAOC,kBAAU,CAACC,iBAAiB;QACzC,MAAMC,UAAU,IAAI,CAACC,iBAAiB,CAACP,IAAIQ,GAAG,EAAEN;QAChDJ,IAAIW,MAAM,CAACN,MAAMO,IAAI,CAACJ;IACxB;IAEQC,kBAAkBI,MAAc,EAAET,OAAe,EAAE;QACzD,IAAI,IAAI,CAACU,aAAa,CAACC,aAAa,EAAE;YACpC,OAAO;gBACLC,WAAW,IAAIC,OAAOC,WAAW;gBACjCC,MAAMN;gBACNT;YACF;QACF,OAAO;YACL,OAAO;gBACLY,WAAW,IAAIC,OAAOC,WAAW;gBACjCC,MAAM;gBACNf,SAAS;YACX;QACF;IACF;IA1BAgB,YAAY,AAAiBN,aAAyB,CAAE;aAA3BA,gBAAAA;IAA4B;AA2B3D"}