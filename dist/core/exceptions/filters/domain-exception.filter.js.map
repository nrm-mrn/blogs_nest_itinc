{"version":3,"sources":["../../../../src/core/exceptions/filters/domain-exception.filter.ts"],"sourcesContent":["import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpStatus,\n} from '@nestjs/common';\nimport { DomainException, Extension } from '../domain-exceptions';\nimport { Response } from 'express';\nimport { DomainExceptionCode } from '../domain-exception-codes';\nimport {\n  APIErrorResult,\n  APIErrorResultExt,\n  FieldError,\n} from '../api-error.result';\nimport { ConfigService } from '@nestjs/config';\nimport { ConfigurationType } from 'src/modules/config/config.module';\n\n@Catch(DomainException)\nexport class DomainHttpExceptionFilter implements ExceptionFilter {\n  constructor(\n    private readonly configService: ConfigService<ConfigurationType>,\n  ) {}\n  catch(exception: DomainException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse<Response>();\n    const code = this.mapToHttpStatus(exception.code);\n    let body = {};\n    if (exception.extensions) {\n      body = this.buildResponseBody(exception, exception.extensions);\n    }\n    response.status(code).json(body);\n  }\n\n  private mapToHttpStatus(code: DomainExceptionCode): number {\n    switch (code) {\n      case DomainExceptionCode.BadRequest:\n      case DomainExceptionCode.ValidationError:\n      case DomainExceptionCode.ConfirmationCodeExpired:\n      case DomainExceptionCode.EmailNotConfirmed:\n      case DomainExceptionCode.PasswordRecoveryCodeExpired:\n        return HttpStatus.BAD_REQUEST;\n      case DomainExceptionCode.Forbidden:\n        return HttpStatus.FORBIDDEN;\n      case DomainExceptionCode.NotFound:\n        return HttpStatus.NOT_FOUND;\n      case DomainExceptionCode.Unauthorized:\n        return HttpStatus.UNAUTHORIZED;\n      case DomainExceptionCode.InternalServerError:\n        return HttpStatus.INTERNAL_SERVER_ERROR;\n      default:\n        return HttpStatus.I_AM_A_TEAPOT;\n    }\n  }\n\n  private buildResponseBody(\n    exception: DomainException,\n    extensions: Extension[],\n  ): APIErrorResult | APIErrorResultExt {\n    const res: FieldError[] = [];\n    extensions.forEach((ext) => {\n      res.push(new FieldError(ext.message, ext.key));\n    });\n\n    if (this.configService.get('nodeEnv') === 'development') {\n      return {\n        errorsMessages: res,\n        message: exception.message,\n      };\n    } else {\n      return { errorsMessages: res };\n    }\n  }\n}\n"],"names":["DomainHttpExceptionFilter","catch","exception","host","ctx","switchToHttp","response","getResponse","code","mapToHttpStatus","body","extensions","buildResponseBody","status","json","DomainExceptionCode","BadRequest","ValidationError","ConfirmationCodeExpired","EmailNotConfirmed","PasswordRecoveryCodeExpired","HttpStatus","BAD_REQUEST","Forbidden","FORBIDDEN","NotFound","NOT_FOUND","Unauthorized","UNAUTHORIZED","InternalServerError","INTERNAL_SERVER_ERROR","I_AM_A_TEAPOT","res","forEach","ext","push","FieldError","message","key","configService","get","errorsMessages","constructor"],"mappings":";;;;+BAkBaA;;;eAAAA;;;wBAbN;kCACoC;sCAEP;gCAK7B;wBACuB;;;;;;;;;;AAIvB,IAAA,AAAMA,4BAAN,MAAMA;IAIXC,MAAMC,SAA0B,EAAEC,IAAmB,EAAE;QACrD,MAAMC,MAAMD,KAAKE,YAAY;QAC7B,MAAMC,WAAWF,IAAIG,WAAW;QAChC,MAAMC,OAAO,IAAI,CAACC,eAAe,CAACP,UAAUM,IAAI;QAChD,IAAIE,OAAO,CAAC;QACZ,IAAIR,UAAUS,UAAU,EAAE;YACxBD,OAAO,IAAI,CAACE,iBAAiB,CAACV,WAAWA,UAAUS,UAAU;QAC/D;QACAL,SAASO,MAAM,CAACL,MAAMM,IAAI,CAACJ;IAC7B;IAEQD,gBAAgBD,IAAyB,EAAU;QACzD,OAAQA;YACN,KAAKO,yCAAmB,CAACC,UAAU;YACnC,KAAKD,yCAAmB,CAACE,eAAe;YACxC,KAAKF,yCAAmB,CAACG,uBAAuB;YAChD,KAAKH,yCAAmB,CAACI,iBAAiB;YAC1C,KAAKJ,yCAAmB,CAACK,2BAA2B;gBAClD,OAAOC,kBAAU,CAACC,WAAW;YAC/B,KAAKP,yCAAmB,CAACQ,SAAS;gBAChC,OAAOF,kBAAU,CAACG,SAAS;YAC7B,KAAKT,yCAAmB,CAACU,QAAQ;gBAC/B,OAAOJ,kBAAU,CAACK,SAAS;YAC7B,KAAKX,yCAAmB,CAACY,YAAY;gBACnC,OAAON,kBAAU,CAACO,YAAY;YAChC,KAAKb,yCAAmB,CAACc,mBAAmB;gBAC1C,OAAOR,kBAAU,CAACS,qBAAqB;YACzC;gBACE,OAAOT,kBAAU,CAACU,aAAa;QACnC;IACF;IAEQnB,kBACNV,SAA0B,EAC1BS,UAAuB,EACa;QACpC,MAAMqB,MAAoB,EAAE;QAC5BrB,WAAWsB,OAAO,CAAC,CAACC;YAClBF,IAAIG,IAAI,CAAC,IAAIC,0BAAU,CAACF,IAAIG,OAAO,EAAEH,IAAII,GAAG;QAC9C;QAEA,IAAI,IAAI,CAACC,aAAa,CAACC,GAAG,CAAC,eAAe,eAAe;YACvD,OAAO;gBACLC,gBAAgBT;gBAChBK,SAASnC,UAAUmC,OAAO;YAC5B;QACF,OAAO;YACL,OAAO;gBAAEI,gBAAgBT;YAAI;QAC/B;IACF;IApDAU,YACE,AAAiBH,aAA+C,CAChE;aADiBA,gBAAAA;IAChB;AAmDL"}