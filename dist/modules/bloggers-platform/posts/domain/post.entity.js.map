{"version":3,"sources":["../../../../../src/modules/bloggers-platform/posts/domain/post.entity.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, Model } from 'mongoose';\nimport { UpdatePostDto } from '../dto/update-post.dto';\nimport { DomainException } from 'src/core/exceptions/domain-exceptions';\nimport { DomainExceptionCode } from 'src/core/exceptions/domain-exception-codes';\nimport { CreatePostDomainDto } from './dto/create-post-domain-dto';\n\nexport const postTitleConstr = {\n  maxLength: 30,\n};\nexport const postDescriptionConstr = {\n  maxLength: 100,\n};\nexport const postContentConstr = {\n  maxLength: 1000,\n};\n\n/**\n * Post entity schema\n * This class represents the schema and behaviour of the post entity\n */\n@Schema({ timestamps: true })\nexport class Post {\n  /**\n   * Post title\n   * @type {string}\n   */\n  @Prop({ type: String, required: true, ...postTitleConstr })\n  title: string;\n\n  /**\n   * Post short description\n   * @type {string}\n   */\n  @Prop({ type: String, required: true, ...postDescriptionConstr })\n  public shortDescription: string;\n\n  /**\n   * Post content\n   * @type {string}\n   */\n  @Prop({ type: String, required: true, ...postContentConstr })\n  public content: string;\n\n  /**\n   * Post's parent blog id\n   * @type {string}\n   */\n  @Prop({ type: String, required: true })\n  public blogId: string;\n\n  /**\n   * Post's parent blog name\n   * @type {string}\n   */\n  @Prop({ type: String, required: true })\n  public blogName: string;\n\n  /**\n   * Timestamps\n   * @type {Date}\n   */\n  createdAt: Date;\n  updatedAt: Date;\n\n  /**\n   * Deletion timestamp\n   * nullable, if exists - means entity is soft deleted\n   * @type {Date | null}\n   */\n  @Prop({ type: Date, nullable: true })\n  deletedAt: Date | null;\n\n  /**\n   * Creates post instance from provided dto\n   * @param {CreatePostDomainDto} dto\n   */\n  static createPost(dto: CreatePostDomainDto): PostDocument {\n    const post = new this();\n    post.title = dto.title;\n    post.shortDescription = dto.shortDescription;\n    post.content = dto.content;\n    post.blogId = dto.blogId;\n    post.blogName = dto.blogName;\n\n    return post as PostDocument;\n  }\n\n  /**\n   * Updates fields in post instance with provided values\n   * @param {UpdatePostDto} dto\n   */\n  updatePost(dto: UpdatePostDto) {\n    this.title = dto.title;\n    this.shortDescription = dto.shortDescription;\n    this.content = dto.content;\n    this.blogId = dto.blogId;\n    return;\n  }\n\n  /**\n   * Marks the post as deleted\n   * @throws {DomainException} if already deleted\n   */\n  markDeleted() {\n    if (this.deletedAt !== null) {\n      throw new DomainException({\n        code: DomainExceptionCode.NotFound,\n        message: 'Entity is already deleted',\n      });\n    }\n    this.deletedAt = new Date();\n  }\n}\n\nexport type PostDocument = HydratedDocument<Post>;\nexport type PostModelType = Model<PostDocument> & typeof Post;\nexport const PostSchema = SchemaFactory.createForClass(Post);\n\nPostSchema.loadClass(Post);\n"],"names":["Post","PostSchema","postContentConstr","postDescriptionConstr","postTitleConstr","maxLength","createPost","dto","post","title","shortDescription","content","blogId","blogName","updatePost","markDeleted","deletedAt","DomainException","code","DomainExceptionCode","NotFound","message","Date","type","String","required","nullable","timestamps","SchemaFactory","createForClass","loadClass"],"mappings":";;;;;;;;;;;QAsBaA;eAAAA;;QA+FAC;eAAAA;;QAxGAC;eAAAA;;QAHAC;eAAAA;;QAHAC;eAAAA;;;0BAP+B;kCAGZ;sCACI;;;;;;;;;;AAG7B,MAAMA,kBAAkB;IAC7BC,WAAW;AACb;AACO,MAAMF,wBAAwB;IACnCE,WAAW;AACb;AACO,MAAMH,oBAAoB;IAC/BG,WAAW;AACb;AAOO,IAAA,AAAML,OAAN,MAAMA;IAmDX;;;GAGC,GACD,OAAOM,WAAWC,GAAwB,EAAgB;QACxD,MAAMC,OAAO,IAAI,IAAI;QACrBA,KAAKC,KAAK,GAAGF,IAAIE,KAAK;QACtBD,KAAKE,gBAAgB,GAAGH,IAAIG,gBAAgB;QAC5CF,KAAKG,OAAO,GAAGJ,IAAII,OAAO;QAC1BH,KAAKI,MAAM,GAAGL,IAAIK,MAAM;QACxBJ,KAAKK,QAAQ,GAAGN,IAAIM,QAAQ;QAE5B,OAAOL;IACT;IAEA;;;GAGC,GACDM,WAAWP,GAAkB,EAAE;QAC7B,IAAI,CAACE,KAAK,GAAGF,IAAIE,KAAK;QACtB,IAAI,CAACC,gBAAgB,GAAGH,IAAIG,gBAAgB;QAC5C,IAAI,CAACC,OAAO,GAAGJ,IAAII,OAAO;QAC1B,IAAI,CAACC,MAAM,GAAGL,IAAIK,MAAM;QACxB;IACF;IAEA;;;GAGC,GACDG,cAAc;QACZ,IAAI,IAAI,CAACC,SAAS,KAAK,MAAM;YAC3B,MAAM,IAAIC,iCAAe,CAAC;gBACxBC,MAAMC,yCAAmB,CAACC,QAAQ;gBAClCC,SAAS;YACX;QACF;QACA,IAAI,CAACL,SAAS,GAAG,IAAIM;IACvB;AACF;;;QAtFUC,MAAMC;QAAQC,UAAU;QAAM,GAAGrB,eAAe;;;;;;QAOhDmB,MAAMC;QAAQC,UAAU;QAAM,GAAGtB,qBAAqB;;;;;;QAOtDoB,MAAMC;QAAQC,UAAU;QAAM,GAAGvB,iBAAiB;;;;;;QAOlDqB,MAAMC;QAAQC,UAAU;;;;;;QAOxBF,MAAMC;QAAQC,UAAU;;;;;;QAexBF,MAAMD;QAAMI,UAAU;;;;;;QAjDtBC,YAAY;;;AAgGf,MAAM1B,aAAa2B,uBAAa,CAACC,cAAc,CAAC7B;AAEvDC,WAAW6B,SAAS,CAAC9B"}