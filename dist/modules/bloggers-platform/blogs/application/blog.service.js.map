{"version":3,"sources":["../../../../../src/modules/bloggers-platform/blogs/application/blog.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { Blog, BlogModelType } from '../domain/blog.entity';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { BlogsRepository } from '../infrastructure/blogs.repository';\nimport { CreateBlogDto } from '../dto/create-blog.dto';\nimport { UpdateBlogDto } from '../dto/update-blog.dto';\n\n@Injectable()\nexport class BlogService {\n  constructor(\n    @InjectModel(Blog.name) private readonly BlogModel: BlogModelType,\n    private readonly blogRepository: BlogsRepository,\n  ) {}\n\n  async createBlog(dto: CreateBlogDto): Promise<{ blogId: string }> {\n    const newBlog = this.BlogModel.createBlog(dto);\n    const blogId = await this.blogRepository.save(newBlog);\n    return { blogId };\n  }\n\n  async editBlog(id: string, dto: UpdateBlogDto): Promise<void> {\n    const blog = await this.blogRepository.findOrNotFoundFail(id);\n    //TODO: update post once entity is there\n    // if (blog.name !== input.name) {\n    //   await this.postsService.editPostsByBlogId(\n    //     { id, blogName: input.name }\n    //   )\n    // }\n    blog.name = dto.name;\n    blog.description = dto.description;\n    blog.websiteUrl = dto.websiteUrl;\n    await this.blogRepository.save(blog);\n    return;\n  }\n\n  async deleteBlog(id: string): Promise<void> {\n    const blog = await this.blogRepository.findOrNotFoundFail(id);\n    await this.blogRepository.deleteBlog(blog);\n    //TODO: cascade delete posts\n    // await this.postsService.deletePostsByBlogId(id);\n  }\n}\n"],"names":["BlogService","createBlog","dto","newBlog","BlogModel","blogId","blogRepository","save","editBlog","id","blog","findOrNotFoundFail","name","description","websiteUrl","deleteBlog","constructor"],"mappings":";;;;+BAQaA;;;eAAAA;;;wBARc;4BACS;0BACR;iCACI;;;;;;;;;;;;;;;AAKzB,IAAA,AAAMA,cAAN,MAAMA;IAMX,MAAMC,WAAWC,GAAkB,EAA+B;QAChE,MAAMC,UAAU,IAAI,CAACC,SAAS,CAACH,UAAU,CAACC;QAC1C,MAAMG,SAAS,MAAM,IAAI,CAACC,cAAc,CAACC,IAAI,CAACJ;QAC9C,OAAO;YAAEE;QAAO;IAClB;IAEA,MAAMG,SAASC,EAAU,EAAEP,GAAkB,EAAiB;QAC5D,MAAMQ,OAAO,MAAM,IAAI,CAACJ,cAAc,CAACK,kBAAkB,CAACF;QAC1D,wCAAwC;QACxC,kCAAkC;QAClC,+CAA+C;QAC/C,mCAAmC;QACnC,MAAM;QACN,IAAI;QACJC,KAAKE,IAAI,GAAGV,IAAIU,IAAI;QACpBF,KAAKG,WAAW,GAAGX,IAAIW,WAAW;QAClCH,KAAKI,UAAU,GAAGZ,IAAIY,UAAU;QAChC,MAAM,IAAI,CAACR,cAAc,CAACC,IAAI,CAACG;QAC/B;IACF;IAEA,MAAMK,WAAWN,EAAU,EAAiB;QAC1C,MAAMC,OAAO,MAAM,IAAI,CAACJ,cAAc,CAACK,kBAAkB,CAACF;QAC1D,MAAM,IAAI,CAACH,cAAc,CAACS,UAAU,CAACL;IACrC,4BAA4B;IAC5B,mDAAmD;IACrD;IA/BAM,YACE,AAAyCZ,SAAwB,EACjE,AAAiBE,cAA+B,CAChD;aAFyCF,YAAAA;aACxBE,iBAAAA;IAChB;AA6BL;;;6DA/BsBM"}