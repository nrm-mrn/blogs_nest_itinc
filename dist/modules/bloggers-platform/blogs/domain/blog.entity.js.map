{"version":3,"sources":["../../../../../src/modules/bloggers-platform/blogs/domain/blog.entity.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { CreateBlogDto } from '../dto/create-blog.dto';\nimport { HydratedDocument, Model } from 'mongoose';\nimport { UpdateBlogDto } from '../dto/update-blog.dto';\nimport { DomainException } from 'src/core/exceptions/domain-exceptions';\nimport { DomainExceptionCode } from 'src/core/exceptions/domain-exception-codes';\n\nexport const blogNameConstraints = {\n  minLength: 1,\n  maxLength: 15,\n};\n\nexport const blogDescriptionConstraints = {\n  maxLength: 500,\n};\n\nexport const blogUrlConstraint = {\n  maxLength: 100,\n};\n\n/**\n * Blog entity schema\n * The class represents the schema and behaviour of the blog entity\n */\n@Schema({ timestamps: true })\nexport class Blog {\n  /**\n   * Blog name\n   * @type {string}\n   * @required\n   */\n  @Prop({ type: String, required: true, ...blogNameConstraints })\n  name: string;\n\n  /**\n   * Blog description\n   * @type {string}\n   * @required\n   */\n  @Prop({ type: String, required: true, ...blogDescriptionConstraints })\n  description: string;\n\n  /**\n   * Blog website URL\n   * @type {string}\n   * @required\n   */\n  @Prop({ type: String, required: true, ...blogUrlConstraint })\n  websiteUrl: string;\n\n  /**\n   * Membership flag\n   * indicates wether this blog is accessible only for members\n   * @type {boolean}\n   * required\n   */\n  @Prop({ type: Boolean, required: true, default: false })\n  isMembership: boolean;\n\n  /**\n   * Timestamps\n   * @type {Date}\n   */\n  createdAt: Date;\n  updatedAt: Date;\n\n  /**\n   * Deletion timestamp\n   * nullable, if exists - means entity is soft deleted\n   * @type {Date | null}\n   */\n  @Prop({ type: Date, nullable: true })\n  deletedAt: Date | null;\n\n  /**\n   * Creates blog instans from provided dto\n   * @param {CreateBlogDto} - data transfer object for blog creation\n   */\n  static createBlog(dto: CreateBlogDto): BlogDocument {\n    const blog = new this();\n    blog.name = dto.name;\n    blog.description = dto.description;\n    blog.websiteUrl = dto.websiteUrl;\n\n    return blog as BlogDocument;\n  }\n\n  /**\n   * Updates blog instance from provided dto rewriting values from dto\n   * @param {UpdateBlogDto} - data transfer object for blog update\n   */\n  updateBlog(dto: UpdateBlogDto) {\n    this.name = dto.name;\n    this.description = dto.description;\n    this.websiteUrl = dto.websiteUrl;\n    return;\n  }\n\n  /**\n   * Marks the blog as deleted\n   * @throws {DomainException} if already deleted\n   */\n  markDeleted() {\n    if (this.deletedAt !== null) {\n      throw new DomainException({\n        code: DomainExceptionCode.NotFound,\n        message: 'Entity is already deleted',\n      });\n    }\n    this.deletedAt = new Date();\n  }\n}\n\nexport type BlogDocument = HydratedDocument<Blog>;\nexport type BlogModelType = Model<BlogDocument> & typeof Blog;\n\nexport const BlogSchema = SchemaFactory.createForClass(Blog);\n\nBlogSchema.loadClass(Blog);\n"],"names":["Blog","BlogSchema","blogDescriptionConstraints","blogNameConstraints","blogUrlConstraint","minLength","maxLength","createBlog","dto","blog","name","description","websiteUrl","updateBlog","markDeleted","deletedAt","DomainException","code","DomainExceptionCode","NotFound","message","Date","type","String","required","Boolean","default","nullable","timestamps","SchemaFactory","createForClass","loadClass"],"mappings":";;;;;;;;;;;QAyBaA;eAAAA;;QA2FAC;eAAAA;;QAxGAC;eAAAA;;QALAC;eAAAA;;QASAC;eAAAA;;;0BAhB+B;kCAIZ;sCACI;;;;;;;;;;AAE7B,MAAMD,sBAAsB;IACjCE,WAAW;IACXC,WAAW;AACb;AAEO,MAAMJ,6BAA6B;IACxCI,WAAW;AACb;AAEO,MAAMF,oBAAoB;IAC/BE,WAAW;AACb;AAOO,IAAA,AAAMN,OAAN,MAAMA;IAiDX;;;GAGC,GACD,OAAOO,WAAWC,GAAkB,EAAgB;QAClD,MAAMC,OAAO,IAAI,IAAI;QACrBA,KAAKC,IAAI,GAAGF,IAAIE,IAAI;QACpBD,KAAKE,WAAW,GAAGH,IAAIG,WAAW;QAClCF,KAAKG,UAAU,GAAGJ,IAAII,UAAU;QAEhC,OAAOH;IACT;IAEA;;;GAGC,GACDI,WAAWL,GAAkB,EAAE;QAC7B,IAAI,CAACE,IAAI,GAAGF,IAAIE,IAAI;QACpB,IAAI,CAACC,WAAW,GAAGH,IAAIG,WAAW;QAClC,IAAI,CAACC,UAAU,GAAGJ,IAAII,UAAU;QAChC;IACF;IAEA;;;GAGC,GACDE,cAAc;QACZ,IAAI,IAAI,CAACC,SAAS,KAAK,MAAM;YAC3B,MAAM,IAAIC,iCAAe,CAAC;gBACxBC,MAAMC,yCAAmB,CAACC,QAAQ;gBAClCC,SAAS;YACX;QACF;QACA,IAAI,CAACL,SAAS,GAAG,IAAIM;IACvB;AACF;;;QAhFUC,MAAMC;QAAQC,UAAU;QAAM,GAAGrB,mBAAmB;;;;;;QAQpDmB,MAAMC;QAAQC,UAAU;QAAM,GAAGtB,0BAA0B;;;;;;QAQ3DoB,MAAMC;QAAQC,UAAU;QAAM,GAAGpB,iBAAiB;;;;;;QASlDkB,MAAMG;QAASD,UAAU;QAAME,SAAS;;;;;;QAexCJ,MAAMD;QAAMM,UAAU;;;;;;QA/CtBC,YAAY;;;AA4Ff,MAAM3B,aAAa4B,uBAAa,CAACC,cAAc,CAAC9B;AAEvDC,WAAW8B,SAAS,CAAC/B"}