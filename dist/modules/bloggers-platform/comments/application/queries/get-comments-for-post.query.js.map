{"version":3,"sources":["../../../../../../src/modules/bloggers-platform/comments/application/queries/get-comments-for-post.query.ts"],"sourcesContent":["import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { CommentsQueryRepository } from '../../infrastructure/comments.query-repository';\nimport { PaginatedViewDto } from 'src/core/dto/base.paginated.view-dto';\nimport { CommentViewDto } from '../../api/view-dto/comment-view.dto';\nimport { GetPostCommentsQueryParams } from '../../api/input-dto/get-post-comments-query-params.input-dto';\nimport { PostsRepository } from 'src/modules/bloggers-platform/posts/infrastructure/posts.repository';\n\nexport class GetCommentsByPostQuery {\n  constructor(\n    public readonly query: GetPostCommentsQueryParams,\n    public readonly postId: string,\n    public readonly userId?: string,\n  ) {}\n}\n\n@QueryHandler(GetCommentsByPostQuery)\nexport class GetCommentsByPostQueryHandler\n  implements\n    IQueryHandler<GetCommentsByPostQuery, PaginatedViewDto<CommentViewDto[]>>\n{\n  constructor(\n    private readonly commentsQueryRepository: CommentsQueryRepository,\n    private readonly postsRepository: PostsRepository,\n  ) {}\n\n  async execute(\n    query: GetCommentsByPostQuery,\n  ): Promise<PaginatedViewDto<CommentViewDto[]>> {\n    await this.postsRepository.findOrNotFoundFail(query.postId);\n    return this.commentsQueryRepository.getCommentsForPost(query);\n  }\n}\n"],"names":["GetCommentsByPostQuery","GetCommentsByPostQueryHandler","constructor","query","postId","userId","execute","postsRepository","findOrNotFoundFail","commentsQueryRepository","getCommentsForPost"],"mappings":";;;;;;;;;;;QAOaA;eAAAA;;QASAC;eAAAA;;;sBAhB+B;yCACJ;iCAIR;;;;;;;;;;AAEzB,IAAA,AAAMD,yBAAN,MAAMA;IACXE,YACE,AAAgBC,KAAiC,EACjD,AAAgBC,MAAc,EAC9B,AAAgBC,MAAe,CAC/B;aAHgBF,QAAAA;aACAC,SAAAA;aACAC,SAAAA;IACf;AACL;AAGO,IAAA,AAAMJ,gCAAN,MAAMA;IASX,MAAMK,QACJH,KAA6B,EACgB;QAC7C,MAAM,IAAI,CAACI,eAAe,CAACC,kBAAkB,CAACL,MAAMC,MAAM;QAC1D,OAAO,IAAI,CAACK,uBAAuB,CAACC,kBAAkB,CAACP;IACzD;IAVAD,YACE,AAAiBO,uBAAgD,EACjE,AAAiBF,eAAgC,CACjD;aAFiBE,0BAAAA;aACAF,kBAAAA;IAChB;AAQL"}