{"version":3,"sources":["../../../../../src/modules/bloggers-platform/comments/domain/comment-like.entity.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { CreateCommentLikeDomainDto } from './dto/create-comment-like-domain-dto';\nimport { HydratedDocument, Model } from 'mongoose';\n\nexport enum CommentLikeStatus {\n  LIKE = 'Like',\n  DISLIKE = 'Dislike',\n  NONE = 'None',\n}\n\n@Schema({ timestamps: true })\nexport class CommentLike {\n  @Prop({ type: String, required: true })\n  commentId: string;\n\n  @Prop({ type: String, required: true })\n  userId: string;\n\n  @Prop({ type: String, enum: CommentLikeStatus, required: true })\n  status: CommentLikeStatus;\n\n  createdAt: Date;\n  updatedAt: Date;\n\n  static createLike(dto: CreateCommentLikeDomainDto): CommentLikeDocument {\n    const like = new this();\n    like.commentId = dto.commentId;\n    like.userId = dto.userId;\n    like.status = dto.status;\n\n    return like as CommentLikeDocument;\n  }\n}\n\nexport type CommentLikeDocument = HydratedDocument<CommentLike>;\nexport type CommentLikeModelType = Model<CommentLikeDocument> &\n  typeof CommentLike;\nexport const CommentLikeSchema = SchemaFactory.createForClass(CommentLike);\n\nCommentLikeSchema.loadClass(CommentLike);\n"],"names":["CommentLike","CommentLikeSchema","CommentLikeStatus","createLike","dto","like","commentId","userId","status","type","String","required","enum","timestamps","SchemaFactory","createForClass","loadClass"],"mappings":";;;;;;;;;;;QAWaA;eAAAA;;QA0BAC;eAAAA;;QAjCDC;eAAAA;;;0BAJgC;;;;;;;;;;AAIrC,IAAA,AAAKA,2CAAAA;;;;WAAAA;;AAOL,IAAA,AAAMF,cAAN,MAAMA;IAaX,OAAOG,WAAWC,GAA+B,EAAuB;QACtE,MAAMC,OAAO,IAAI,IAAI;QACrBA,KAAKC,SAAS,GAAGF,IAAIE,SAAS;QAC9BD,KAAKE,MAAM,GAAGH,IAAIG,MAAM;QACxBF,KAAKG,MAAM,GAAGJ,IAAII,MAAM;QAExB,OAAOH;IACT;AACF;;;QApBUI,MAAMC;QAAQC,UAAU;;;;;;QAGxBF,MAAMC;QAAQC,UAAU;;;;;;QAGxBF,MAAMC;QAAQE,MAAMV;QAAmBS,UAAU;;;;;;QARjDE,YAAY;;;AA2Bf,MAAMZ,oBAAoBa,uBAAa,CAACC,cAAc,CAACf;AAE9DC,kBAAkBe,SAAS,CAAChB"}