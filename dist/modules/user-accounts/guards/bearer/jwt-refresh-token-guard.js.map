{"version":3,"sources":["../../../../../src/modules/user-accounts/guards/bearer/jwt-refresh-token-guard.ts"],"sourcesContent":["import { Injectable, ExecutionContext, CanActivate } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { DomainExceptionCode } from 'src/core/exceptions/domain-exception-codes';\nimport { DomainException } from 'src/core/exceptions/domain-exceptions';\n\n@Injectable()\nexport class RefreshTokenGuard implements CanActivate {\n  constructor(private readonly jwtService: JwtService) {}\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const req = context.switchToHttp().getRequest<Request>();\n    const refreshToken: string | undefined = req.cookies.refreshToken;\n    if (!refreshToken) {\n      throw new DomainException({\n        code: DomainExceptionCode.Unauthorized,\n        message: 'No refresh token present in cookies',\n      });\n    }\n    try {\n      await this.jwtService.verify(refreshToken);\n    } catch {\n      throw new DomainException({\n        code: DomainExceptionCode.Unauthorized,\n        message: 'Invalid refresh token presented',\n      });\n    }\n    return true;\n  }\n}\n"],"names":["RefreshTokenGuard","canActivate","context","req","switchToHttp","getRequest","refreshToken","cookies","DomainException","code","DomainExceptionCode","Unauthorized","message","jwtService","verify","constructor"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBAP6C;qBAC/B;sCAES;kCACJ;;;;;;;;;;AAGzB,IAAA,AAAMA,oBAAN,MAAMA;IAEX,MAAMC,YAAYC,OAAyB,EAAoB;QAC7D,MAAMC,MAAMD,QAAQE,YAAY,GAAGC,UAAU;QAC7C,MAAMC,eAAmCH,IAAII,OAAO,CAACD,YAAY;QACjE,IAAI,CAACA,cAAc;YACjB,MAAM,IAAIE,iCAAe,CAAC;gBACxBC,MAAMC,yCAAmB,CAACC,YAAY;gBACtCC,SAAS;YACX;QACF;QACA,IAAI;YACF,MAAM,IAAI,CAACC,UAAU,CAACC,MAAM,CAACR;QAC/B,EAAE,OAAM;YACN,MAAM,IAAIE,iCAAe,CAAC;gBACxBC,MAAMC,yCAAmB,CAACC,YAAY;gBACtCC,SAAS;YACX;QACF;QACA,OAAO;IACT;IAnBAG,YAAY,AAAiBF,UAAsB,CAAE;aAAxBA,aAAAA;IAAyB;AAoBxD"}