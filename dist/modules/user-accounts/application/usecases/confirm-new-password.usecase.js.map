{"version":3,"sources":["../../../../../src/modules/user-accounts/application/usecases/confirm-new-password.usecase.ts"],"sourcesContent":["import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { UUID } from 'crypto';\nimport { UsersRepository } from '../../infrastructure/users.repository';\nimport { HashService } from '../passHash.service';\nimport { DomainExceptionCode } from 'src/core/exceptions/domain-exception-codes';\nimport {\n  DomainException,\n  Extension,\n} from 'src/core/exceptions/domain-exceptions';\n\nexport class ConfirmPasswordCommand {\n  constructor(\n    public code: UUID,\n    public password: string,\n  ) {}\n}\n\n@CommandHandler(ConfirmPasswordCommand)\nexport class ConfirmPasswordHandler\n  implements ICommandHandler<ConfirmPasswordCommand>\n{\n  constructor(\n    private readonly usersRepository: UsersRepository,\n    private readonly hashService: HashService,\n  ) {}\n\n  async execute(command: ConfirmPasswordCommand): Promise<any> {\n    const user = await this.usersRepository.getUserByPassRecovery(command.code);\n    if (!user) {\n      throw new DomainException({\n        code: DomainExceptionCode.BadRequest,\n        message: 'Incorrect recovery code',\n        extensions: [new Extension('incorrect recovery code', 'recoveryCode')],\n      });\n    }\n    const hash = await this.hashService.createHash(command.password);\n    user.confirmPassword(hash);\n    await this.usersRepository.save(user);\n    return;\n  }\n}\n"],"names":["ConfirmPasswordCommand","ConfirmPasswordHandler","constructor","code","password","execute","command","user","usersRepository","getUserByPassRecovery","DomainException","DomainExceptionCode","BadRequest","message","extensions","Extension","hash","hashService","createHash","confirmPassword","save"],"mappings":";;;;;;;;;;;QAUaA;eAAAA;;QAQAC;eAAAA;;;sBAlBmC;iCAEhB;iCACJ;sCACQ;kCAI7B;;;;;;;;;;AAEA,IAAA,AAAMD,yBAAN,MAAMA;IACXE,YACE,AAAOC,IAAU,EACjB,AAAOC,QAAgB,CACvB;aAFOD,OAAAA;aACAC,WAAAA;IACN;AACL;AAGO,IAAA,AAAMH,yBAAN,MAAMA;IAQX,MAAMI,QAAQC,OAA+B,EAAgB;QAC3D,MAAMC,OAAO,MAAM,IAAI,CAACC,eAAe,CAACC,qBAAqB,CAACH,QAAQH,IAAI;QAC1E,IAAI,CAACI,MAAM;YACT,MAAM,IAAIG,iCAAe,CAAC;gBACxBP,MAAMQ,yCAAmB,CAACC,UAAU;gBACpCC,SAAS;gBACTC,YAAY;oBAAC,IAAIC,2BAAS,CAAC,2BAA2B;iBAAgB;YACxE;QACF;QACA,MAAMC,OAAO,MAAM,IAAI,CAACC,WAAW,CAACC,UAAU,CAACZ,QAAQF,QAAQ;QAC/DG,KAAKY,eAAe,CAACH;QACrB,MAAM,IAAI,CAACR,eAAe,CAACY,IAAI,CAACb;QAChC;IACF;IAlBAL,YACE,AAAiBM,eAAgC,EACjD,AAAiBS,WAAwB,CACzC;aAFiBT,kBAAAA;aACAS,cAAAA;IAChB;AAgBL"}