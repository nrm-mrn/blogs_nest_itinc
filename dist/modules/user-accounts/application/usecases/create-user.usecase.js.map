{"version":3,"sources":["../../../../../src/modules/user-accounts/application/usecases/create-user.usecase.ts"],"sourcesContent":["import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { UsersRepository } from '../../infrastructure/users.repository';\nimport { UsersService } from '../users.service';\n\nexport class CreateUserByAdminCommand {\n  constructor(\n    public login: string,\n    public password: string,\n    public email: string,\n  ) {}\n}\n\n@CommandHandler(CreateUserByAdminCommand)\nexport class CreateUserByAdminHandler\n  implements ICommandHandler<CreateUserByAdminCommand, { userId: string }>\n{\n  constructor(\n    private readonly usersRepository: UsersRepository,\n    private readonly usersService: UsersService,\n  ) {}\n\n  async execute(\n    command: CreateUserByAdminCommand,\n  ): Promise<{ userId: string }> {\n    const newUser = await this.usersService.createUserDoc(command);\n    newUser.confirmEmailByAdmin();\n    const userId = await this.usersRepository.save(newUser);\n    return { userId };\n  }\n}\n"],"names":["CreateUserByAdminCommand","CreateUserByAdminHandler","constructor","login","password","email","execute","command","newUser","usersService","createUserDoc","confirmEmailByAdmin","userId","usersRepository","save"],"mappings":";;;;;;;;;;;QAIaA;eAAAA;;QASAC;eAAAA;;;sBAbmC;iCAChB;8BACH;;;;;;;;;;AAEtB,IAAA,AAAMD,2BAAN,MAAMA;IACXE,YACE,AAAOC,KAAa,EACpB,AAAOC,QAAgB,EACvB,AAAOC,KAAa,CACpB;aAHOF,QAAAA;aACAC,WAAAA;aACAC,QAAAA;IACN;AACL;AAGO,IAAA,AAAMJ,2BAAN,MAAMA;IAQX,MAAMK,QACJC,OAAiC,EACJ;QAC7B,MAAMC,UAAU,MAAM,IAAI,CAACC,YAAY,CAACC,aAAa,CAACH;QACtDC,QAAQG,mBAAmB;QAC3B,MAAMC,SAAS,MAAM,IAAI,CAACC,eAAe,CAACC,IAAI,CAACN;QAC/C,OAAO;YAAEI;QAAO;IAClB;IAZAV,YACE,AAAiBW,eAAgC,EACjD,AAAiBJ,YAA0B,CAC3C;aAFiBI,kBAAAA;aACAJ,eAAAA;IAChB;AAUL"}