{"version":3,"sources":["../../../../../src/modules/user-accounts/application/queries/get-user-info.query.ts"],"sourcesContent":["import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { MeViewDto } from '../../api/view-dto/users.view-dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User, UserModelType } from '../../domain/user.entity';\nimport { DomainExceptionCode } from 'src/core/exceptions/domain-exception-codes';\nimport { DomainException } from 'src/core/exceptions/domain-exceptions';\n\nexport class GetUserInfoQuery {\n  constructor(public userId: string) {}\n}\n\n@QueryHandler(GetUserInfoQuery)\nexport class GetUserInfoQueryHandler\n  implements IQueryHandler<GetUserInfoQuery, MeViewDto>\n{\n  constructor(\n    @InjectModel(User.name) private readonly UserModel: UserModelType,\n  ) {}\n\n  async execute(query: GetUserInfoQuery): Promise<MeViewDto> {\n    const user = await this.UserModel.findOne({\n      _id: query.userId,\n      deletedAt: null,\n    }).orFail(\n      new DomainException({\n        code: DomainExceptionCode.InternalServerError,\n        message: 'user not found by access token info',\n      }),\n    );\n    return MeViewDto.mapToView(user);\n  }\n}\n"],"names":["GetUserInfoQuery","GetUserInfoQueryHandler","constructor","userId","execute","query","user","UserModel","findOne","_id","deletedAt","orFail","DomainException","code","DomainExceptionCode","InternalServerError","message","MeViewDto","mapToView","name"],"mappings":";;;;;;;;;;;QAOaA;eAAAA;;QAKAC;eAAAA;;;sBAZ+B;8BAClB;0BACE;4BACQ;sCACA;kCACJ;;;;;;;;;;;;;;;AAEzB,IAAA,AAAMD,mBAAN,MAAMA;IACXE,YAAY,AAAOC,MAAc,CAAE;aAAhBA,SAAAA;IAAiB;AACtC;AAGO,IAAA,AAAMF,0BAAN,MAAMA;IAOX,MAAMG,QAAQC,KAAuB,EAAsB;QACzD,MAAMC,OAAO,MAAM,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC;YACxCC,KAAKJ,MAAMF,MAAM;YACjBO,WAAW;QACb,GAAGC,MAAM,CACP,IAAIC,iCAAe,CAAC;YAClBC,MAAMC,yCAAmB,CAACC,mBAAmB;YAC7CC,SAAS;QACX;QAEF,OAAOC,uBAAS,CAACC,SAAS,CAACZ;IAC7B;IAfAJ,YACE,AAAyCK,SAAwB,CACjE;aADyCA,YAAAA;IACxC;AAcL;;;6DAfsBY"}