{"version":3,"sources":["../../../../src/modules/user-accounts/api/users.controller.ts"],"sourcesContent":["import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Post,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { GetUsersQueryParams } from './input-dto/get-users-query-params.input-dto';\nimport { PaginatedViewDto } from 'src/core/dto/base.paginated.view-dto';\nimport { UserViewDto } from './view-dto/users.view-dto';\nimport { BasicAuthGuard } from '../guards/basic/basic-auth.guard';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { ObjectIdValidationPipe } from 'src/core/pipes/object-id-validation-pipe.service';\nimport { CreateUserInputDto } from './input-dto/create-user.input-dto';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { CreateUserByAdminCommand } from '../application/usecases/create-user.usecase';\nimport { GetUserQuery } from '../application/queries/get-user.query';\nimport { GetAllUsersQuery } from '../application/queries/get-all-users.query';\nimport { DeleteUserCommand } from '../application/usecases/delete-user.usecase';\n\n@Controller('users')\n@UseGuards(BasicAuthGuard)\nexport class UsersController {\n  constructor(\n    private readonly commandBus: CommandBus,\n    private readonly queryBus: QueryBus,\n  ) {}\n\n  @Get()\n  @HttpCode(HttpStatus.OK)\n  async getAllUsers(\n    @Query() query: GetUsersQueryParams,\n  ): Promise<PaginatedViewDto<UserViewDto[]>> {\n    return this.queryBus.execute(new GetAllUsersQuery(query));\n  }\n\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  async createUser(@Body() body: CreateUserInputDto): Promise<UserViewDto> {\n    const input: CreateUserDto = {\n      login: body.login,\n      email: body.email,\n      password: body.password,\n    };\n    const { userId } = await this.commandBus.execute(\n      new CreateUserByAdminCommand(input.login, input.password, input.email),\n    );\n    const user = await this.queryBus.execute(new GetUserQuery(userId));\n    return user;\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  async deleteUser(@Param('id', ObjectIdValidationPipe) id: string) {\n    return this.commandBus.execute(new DeleteUserCommand(id));\n  }\n}\n"],"names":["UsersController","getAllUsers","query","queryBus","execute","GetAllUsersQuery","createUser","body","input","login","email","password","userId","commandBus","CreateUserByAdminCommand","user","GetUserQuery","deleteUser","id","DeleteUserCommand","constructor","OK","CREATED","NO_CONTENT"],"mappings":";;;;+BA2BaA;;;eAAAA;;;wBAhBN;6CAC6B;gCAGL;+CAEQ;oCACJ;sBACE;mCACI;8BACZ;kCACI;mCACC;;;;;;;;;;;;;;;AAI3B,IAAA,AAAMA,kBAAN,MAAMA;IAMX,MAEMC,YACJ,AAASC,KAA0B,EACO;QAC1C,OAAO,IAAI,CAACC,QAAQ,CAACC,OAAO,CAAC,IAAIC,kCAAgB,CAACH;IACpD;IAEA,MAEMI,WAAW,AAAQC,IAAwB,EAAwB;QACvE,MAAMC,QAAuB;YAC3BC,OAAOF,KAAKE,KAAK;YACjBC,OAAOH,KAAKG,KAAK;YACjBC,UAAUJ,KAAKI,QAAQ;QACzB;QACA,MAAM,EAAEC,MAAM,EAAE,GAAG,MAAM,IAAI,CAACC,UAAU,CAACT,OAAO,CAC9C,IAAIU,2CAAwB,CAACN,MAAMC,KAAK,EAAED,MAAMG,QAAQ,EAAEH,MAAME,KAAK;QAEvE,MAAMK,OAAO,MAAM,IAAI,CAACZ,QAAQ,CAACC,OAAO,CAAC,IAAIY,0BAAY,CAACJ;QAC1D,OAAOG;IACT;IAEA,MAEME,WAAW,AAAqCC,EAAU,EAAE;QAChE,OAAO,IAAI,CAACL,UAAU,CAACT,OAAO,CAAC,IAAIe,oCAAiB,CAACD;IACvD;IAhCAE,YACE,AAAiBP,UAAsB,EACvC,AAAiBV,QAAkB,CACnC;aAFiBU,aAAAA;aACAV,WAAAA;IAChB;AA8BL;;;6CA3BuBkB;;;;;;;;;;6CAQAC;;;;;;;;;;6CAeAC"}